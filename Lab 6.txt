#include <stdio.h>
#include <string.h>

struct studentNode {
  char name[20];
  int age;
  char sex;
  float gpa;
  struct studentNode *next;
  struct studentNode *back;
};

void ShowAll(struct studentNode *walk);

int main() {
  struct studentNode *start, *now;
  start = NULL;

  now = InsertNode(&start, "one", 6, 'M', 3.11);
  ShowAll(start);

  now = InsertNode(&start, "two", 8, 'F', 3.22);
  ShowAll(start);

  InsNode(now, "three", 10, 'M', 3.33);
  ShowAll(start);

  InsNode(now, "four", 12, 'F', 3.44);
  ShowAll(start);

  GoBack(&now);
  DelNode(now);
  ShowAll(start);

  DelNode(now);
  ShowAll(start);

  DelNode(now);
  ShowAll(start);

  return 0;
}

void ShowAll(struct studentNode *walk) {
  while (walk != NULL) {
    printf("%s ", walk->name);
    walk = walk->next;
  }
  printf("\n");
}

void GoBack(struct studentNode **now) {
  // 1. ตรวจสอบ
  if (*now != NULL) {
    // 2. เลื่อน now ไปยังโหนดก่อนหน้า
    *now = (*now)->back;
  }
}

struct studentNode *InsertNode(struct studentNode **start, char *name, int age, char sex, float gpa) {
  struct studentNode *newNode, *lastNode;
  struct studentNode *next;

  // 1. สร้างโหนดใหม่
  newNode = (struct studentNode *)malloc(sizeof(struct studentNode));

  // 2. กำหนดข้อมูล
  strcpy(newNode->name, name);
  newNode->age = age;
  newNode->sex = sex;
  newNode->gpa = gpa;

  // 3. เชื่อมโยงโหนดใหม่
  if (*start == NULL) {
    *start = newNode;
    newNode->back = NULL;
  } else {
    lastNode = *start;
    while (lastNode->next != NULL) {
      lastNode = lastNode->next;
    }

    // 3.1 เก็บ next ของ lastNode
    next = lastNode->next;

    // 3.2 เชื่อมโยง lastNode กับ newNode
    lastNode->next = newNode;
    newNode->back = lastNode;

    // 3.3 เชื่อมโยง newNode กับ next
    newNode->next = next;
    if (next != NULL) {
      next->back = newNode;
    }
  }

  // 4. อัปเดต now
  return newNode;
}

void DelNode(struct studentNode **now) {
  // 1. ตรวจสอบ
  if (*now != NULL) {
    // 2. เก็บโหนดถัดไป
    struct studentNode *next = (*now)->next;

    // 3. เชื่อมโยงโหนดก่อนหน้ากับโหนดถัดไป
    if ((*now)->back != NULL) {
      (*now)->back->next = next;
    } else {
      *start = next;
    }

    // 4. เชื่อมโยงโหนดถัดไปกับโหนดก่อนหน้า
    if (next != NULL) {
      next->back = (*now)->back;
    }

    // 5. ลบโหนดปัจจุบัน
    free(*now);

    // 6. อัปเดต now
    *now = next;
  }
}